// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package stellar

import (
	"time"
)

const TableNameAsset = "assets"

// Asset mapped from table <assets>
type Asset struct {
	PagingToken             string    `gorm:"column:paging_token;primaryKey" json:"paging_token"`
	AssetType               string    `gorm:"column:asset_type;not null" json:"asset_type"`
	AssetCode               string    `gorm:"column:asset_code;not null" json:"asset_code"`
	AssetIssuer             string    `gorm:"column:asset_issuer;not null" json:"asset_issuer"`
	NumAccounts             int32     `gorm:"column:num_accounts;not null" json:"num_accounts"`
	NumClaimableBalances    int32     `gorm:"column:num_claimable_balances;not null" json:"num_claimable_balances"`
	NumLiquidityPools       int32     `gorm:"column:num_liquidity_pools;not null" json:"num_liquidity_pools"`
	NumContracts            int32     `gorm:"column:num_contracts;not null" json:"num_contracts"`
	NumArchivedContracts    int32     `gorm:"column:num_archived_contracts;not null" json:"num_archived_contracts"`
	Amount                  float64   `gorm:"column:amount" json:"amount"`
	Accounts                string    `gorm:"column:accounts" json:"accounts"`
	ClaimableBalancesAmount float64   `gorm:"column:claimable_balances_amount" json:"claimable_balances_amount"`
	LiquidityPoolsAmount    float64   `gorm:"column:liquidity_pools_amount" json:"liquidity_pools_amount"`
	ContractsAmount         float64   `gorm:"column:contracts_amount" json:"contracts_amount"`
	ArchivedContractsAmount float64   `gorm:"column:archived_contracts_amount" json:"archived_contracts_amount"`
	Balances                string    `gorm:"column:balances" json:"balances"`
	Flags                   string    `gorm:"column:flags" json:"flags"`
	ProcessTime             time.Time `gorm:"column:process_time" json:"process_time"`
	BlockDate               time.Time `gorm:"column:block_date;not null" json:"block_date"`
}

// TableName Asset's table name
func (*Asset) TableName() string {
	return TableNameAsset
}
